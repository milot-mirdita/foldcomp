name: Build and run sanitizers

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  build:
    strategy:
      matrix:
        compiler: [gcc, clang]
        type: [ASan, UBSan, TSan]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: |
        if [ "$CC" = "clang" ]; then
          CLANG_MAJOR=$(echo | clang -dM -E - | grep __clang_major__ | awk '{ print $3; }')
          sudo apt-get install libc++-${CLANG_MAJOR}-dev libc++abi-${CLANG_MAJOR}-dev
        fi
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.type}} -DHAVE_SANITIZER=1
      env:
        CC: ${{matrix.compiler}}
        CXX: ${{ fromJSON(matrix.compiler == 'gcc' && '"g++"' || '"clang++"') }}
        CXXFLAGS: ${{ fromJSON(matrix.compiler == 'clang' && '"-stdlib=libc++"' || '""') }}
        LDFLAGS: ${{ fromJSON(matrix.compiler == 'clang' && '"-lc++abi"' || '""') }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.type}} --parallel $(nproc --all)

    - name: ASan
      working-directory: ${{github.workspace}}/build
      run: |
        ./foldcomp compress ../test.pdb
        ./foldcomp decompress ../test.fcz
        ./foldcomp compress ../test.cif.gz
        ./foldcomp decompress ../test.cif.fcz
